#!/usr/bin/env node

(async() => {

const {Client} = require('tplink-smarthome-api');

const host = '192.168.1.123';
const client = new Client();
const device = await client.getDevice({host});

process.on('SIGINT', async (signal) => {
  console.log('');
  console.log(`${signal} handler: Making sure the pump is off to end with.`);
  await device.setPowerState(false);
  process.exit();
});

console.log('Making sure the pump is off to begin with.');
await device.setPowerState(false);

// https://stackoverflow.com/a/50092576
function delayMilliseconds(milliseconds) {
  return new Promise(function(resolve) {
      setTimeout(function() {
          resolve();
      }, milliseconds);
  });
}

const initialTimeoutSeconds = 3;
console.log(`Will begin watering sequence in ${initialTimeoutSeconds} seconds.`);
await delayMilliseconds(initialTimeoutSeconds * 1000);

const onDurationSeconds = 3;
const offDurationSeconds = 60;
const numCycles = 10;
console.log('');
for (let currentCycle = 0; currentCycle < numCycles; ++currentCycle) {
    console.log(`cycle ${currentCycle + 1}/${numCycles}`);
    console.log(`-> running pump for ${onDurationSeconds} seconds.`);
    await device.setPowerState(true);
    await delayMilliseconds(onDurationSeconds * 1000);
    await device.setPowerState(false);
    console.log(`-> keeping pump off for ${offDurationSeconds} seconds.`);
    await delayMilliseconds(offDurationSeconds * 1000);
    console.log('');
}

})();
